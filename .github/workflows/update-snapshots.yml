name: Update Playwright Snapshots

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-snapshots:
    # Only run on PR comments that contain '/update-snapshots'
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/update-snapshots')
    runs-on: ubuntu-latest
    steps:
      - name: React to comment and create check run
        id: create-check
        uses: actions/github-script@v7
        with:
          script: |
            // React with rocket emoji
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });

            // Get PR details
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            // Create a check run
            const check = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Update Snapshots',
              head_sha: pr.data.head.sha,
              status: 'in_progress',
              started_at: new Date().toISOString(),
              output: {
                title: 'Updating Playwright Snapshots',
                summary: 'Running tests with --update-snapshots flag...'
              }
            });

            core.setOutput('check_id', check.data.id);
            core.setOutput('pr_sha', pr.data.head.sha);

            // Post initial comment with workflow link
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ Updating Playwright snapshots...\n\n[View workflow run](${runUrl})`
            });

      - name: Get PR branch
        id: pr-branch
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            core.setOutput('ref', pr.data.head.ref);
            core.setOutput('sha', pr.data.head.sha);

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr-branch.outputs.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright Chromium browser
        run: pnpm exec playwright install chromium --with-deps

      - name: Build application
        env:
          PUBLIC_MAPBOX_TOKEN: ${{ secrets.PUBLIC_MAPBOX_TOKEN }}
        run: pnpm run build

      - name: Update snapshots
        run: pnpm exec playwright test --project=chromium --update-snapshots || true

      - name: Commit and push updated snapshots
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A tests/
          if git diff --staged --quiet; then
            echo "No snapshot changes detected"
            echo "HAS_CHANGES=false" >> $GITHUB_ENV
          else
            git commit -m "Update Playwright snapshots from CI

          Triggered by: ${{ github.event.comment.user.login }}

          ü§ñ Generated with [Claude Code](https://claude.com/claude-code)"
            # Pull with rebase in case branch was updated
            git pull --rebase origin ${{ steps.pr-branch.outputs.ref }}
            git push
            echo "HAS_CHANGES=true" >> $GITHUB_ENV
          fi

      - name: Update check run and comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const hasChanges = process.env.HAS_CHANGES === 'true';
            const checkId = '${{ steps.create-check.outputs.check_id }}';
            const prSha = '${{ steps.create-check.outputs.pr_sha }}';

            const message = hasChanges
              ? '‚úÖ Snapshots have been updated and committed to this PR!'
              : '‚ÑπÔ∏è No snapshot changes were needed.';

            // Update check run status
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: checkId,
              status: 'completed',
              conclusion: 'success',
              completed_at: new Date().toISOString(),
              output: {
                title: hasChanges ? 'Snapshots Updated' : 'No Changes Needed',
                summary: message
              }
            });

            // Comment on PR
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
