name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Split tests across 3 shards for parallel execution
        shard: [1, 2, 3]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      # Cache Playwright browsers to speed up installation
      - name: Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install Playwright Chromium browser
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install chromium --with-deps

      - name: Install Playwright system dependencies only
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm exec playwright install-deps chromium

      - name: Build application
        env:
          PUBLIC_MAPBOX_TOKEN: ${{ secrets.PUBLIC_MAPBOX_TOKEN }}
        run: pnpm run build

      - name: Run Playwright tests (shard ${{ matrix.shard }}/3)
        run: pnpm exec playwright test --project=chromium --shard=${{ matrix.shard }}/3

      - name: Upload blob report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: blob-report-${{ matrix.shard }}
          path: blob-report/
          retention-days: 30

      - name: Upload screenshots and videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-screenshots-${{ matrix.shard }}
          path: |
            test-results/
          retention-days: 30

  # Merge reports from all shards into a single report
  merge-reports:
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Download all blob reports
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports/
          pattern: blob-report-*

      - name: Merge reports into HTML and JSON
        run: |
          # Merge all blob reports - each artifact is in its own subdirectory
          mkdir -p merged-blob-reports
          for report in all-blob-reports/blob-report-*/report-*.zip; do
            cp "$report" merged-blob-reports/
          done
          # Merge into playwright-report directory with both HTML and JSON reporters
          pnpm exec playwright merge-reports --reporter html --reporter json ./merged-blob-reports

          # Verify output
          echo "Merged report contents:"
          ls -la playwright-report/ || echo "playwright-report directory not created"

      - name: Upload merged report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-merged
          path: playwright-report/
          retention-days: 30

      - name: Comment PR with test results
        uses: daun/playwright-report-comment@v3
        if: always() && github.event_name == 'pull_request'
        with:
          report-file: playwright-report/results.json
